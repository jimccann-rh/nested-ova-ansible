---

- name: Include vars of vcenter_host.yml
  ansible.builtin.include_vars:
    file: vcenter_host.yml
    name: vcenter

- name: List hosts in ESXi
  debug:
    msg: "Host: {{ inventory_hostname }}"
  loop: "{{ groups['esxi'] }}"

- name: List hosts in VC
  debug:
    msg: "Host: {{ inventory_hostname }}"
  loop: "{{ groups['vc'] }}"

- name: Set vc name
  ansible.builtin.set_fact:
    host_fact_hostname: "{{ hostvars[groups['vc'][my_idx_vc]].inventory_hostname }}"

- name: Setting host facts
  ansible.builtin.set_fact:
    vmkguest: "vmkernel8Guest"
  when: '"8" in version'

- name: Setting host facts
  ansible.builtin.set_fact:
    vmkguest: "vmkernel7Guest"
  when: '"7" in version'


- name: VC Exists
  block:

## TEMP TESTING
    - name: "DELETE virtual machine {{ host_fact_hostname }} version {{ version }}"
      community.vmware.vmware_guest:
        datacenter: "{{ vcenter.vc_datacenter }}"
        folder: "{{ vcenter.vc_datacenter }}/vm/{{ vcenter.vc_folder }}"
        name: "{{ host_fact_hostname }}"
        state: absent
        force: true
      when: testingvc | bool

    - name: "Does VC virtual machine {{ host_fact_hostname }} exist"
      community.vmware.vmware_guest:
        datacenter: "{{ vcenter.vc_datacenter }}"
        folder: "{{ vcenter.vc_datacenter }}/vm/{{ vcenter.vc_folder }}"
        name: "{{ host_fact_hostname }}"
        state: present

    - name: "Does VC virtual machine {{ host_fact_hostname }} exist get ip"
      community.vmware.vmware_guest_info:
        datacenter: "{{ vcenter.vc_datacenter }}"
        name: "{{ host_fact_hostname }}"
        schema: vsphere
        properties:
          - guest.ipAddress
      register: nested_vm

    - name: Wait for vCenter
      vmware_about_info:
        hostname: '{{ nested_vm.instance.guest.ipAddress }}'
        username: 'administrator@{{ vcenter.vc_fact_domain }}'
        password: "{{  lookup('ansible.builtin.env', 'VCESXIPASSWORD')  }}"
        validate_certs: no
      retries: 30
      delay: 60
      register: result
      until: result is succeeded

    - name: Add host to group vc
      ansible.builtin.add_host:
        name: '{{ host_fact_hostname }}'
        groups: vc
        NESTEDVMIP: "{{ nested_vm.instance.guest.ipAddress }}"
    
  rescue:

    - community.vmware.vmware_deploy_ovf:
        url: "http://10.93.245.232:8080/{{ vcenterova }}"
        datacenter: "{{ vcenter.vc_datacenter }}"
        name: '{{ host_fact_hostname }}' 
        enable_hidden_properties: true
        folder: "{{ vcenter.vc_datacenter }}/vm/{{ vcenter.vc_folder }}"
        datastore: vsanDatastore
        disk_provisioning: thin
        networks:
            "Network 1": "{{ vcenter.vc_fact_deployment_network }}"
        wait_for_ip_address: true
        validate_certs: no
        inject_ovf_env: true
        properties:
          DeploymentOption.value: 'tiny' # vCenter t-shirt size: tiny,small,medium,large, or infrastructure 
          guestinfo.cis.appliance.net.addr.family: 'ipv4' # ipv4 or ipv6
          guestinfo.cis.appliance.net.mode: 'dhcp' # static or dhcp
#          guestinfo.cis.appliance.net.pnid: 'localhost.localdomain' # "{{ vcenter_hostname }}.{{ domain }}" # FQDN of vcenter server
          guestinfo.cis.appliance.root.passwd: "{{ lookup('ansible.builtin.env', 'VCESXIPASSWORD') }}"
          guestinfo.cis.vmdir.password: "{{ lookup('ansible.builtin.env', 'VCESXIPASSWORD') }}" # SSO Password for administrator@vsphere.local
          domain: "{{ vcenter.vc_fact_domain }}"
          guestinfo.cis.appliance.ssh.enabled: 'True'
          guestinfo.cis.deployment.autoconfig: 'True' # Auto-configure after deployment
#      register: nested_vm

    - name: Pause while vcenter reboots itself (this is to get around the issue of IPv6 address showing up 1st in the vmtools)
      pause:
        seconds: 180

    - name: Retrieve guest info
      community.vmware.vmware_guest_info:
        name: "{{ host_fact_hostname }}"
        datacenter: "{{ vcenter.vc_datacenter }}"
      register: guest_info
      until: guest_info.instance.guest_tools_status == "guestToolsRunning"
      retries: 60
      delay: 30

    - name: "Does VC virtual machine {{ host_fact_hostname }} exist get ip"
      community.vmware.vmware_guest_info:
        datacenter: "{{ vcenter.vc_datacenter }}"
        name: "{{ host_fact_hostname }}"
        schema: vsphere
        properties:
          - guest.ipAddress
      register: nested_vm
    
    - name: Add host to group vc
      ansible.builtin.add_host:
        name: '{{ host_fact_hostname }}'
        groups: vc
        NESTEDVMIP: "{{ nested_vm.instance.guest.ipAddress }}"
#        NESTEDVMIP: "{{ nested_vm.instance.guest.ipAddress | ipaddress('ipv4') | split(' ')[0] }}"
    #    DC: "1"

    - debug:
        msg:  "vcenter ip is: {{ nested_vm.instance }}"

    - name: Wait for vCenter
      vmware_about_info:
        hostname: "{{ hostvars[groups['vc'][my_idx_vc]].NESTEDVMIP }}"
        username: 'administrator@{{ vcenter.vc_fact_domain }}'
        password: "{{  lookup('ansible.builtin.env', 'VCESXIPASSWORD')  }}"
        validate_certs: no
      retries: 30
      delay: 60
      register: result
      until: result is succeeded
    
        
    - name: "Wait for {{ hostvars[groups['vc'][my_idx_vc]].inventory_hostname }} {{ nested_vm.instance.guest.ipAddress }} install of VC on host to be complete"
      ansible.builtin.wait_for:
        host: "{{ nested_vm.instance.guest.ipAddress }}"
        #host: "{{ nested_vm.instance.guest.ipAddress | ipaddress('ipv4') | split(' ')[0] }}"
        port: 443
    #    delay: 180
        sleep: 10
        timeout: 900
